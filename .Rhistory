plot(Yt_MA2)
Yt_MA2 <- arima.sim(n = 200, model=list(ma = c(0.45, 0.55)))
plot(Yt_MA2)
samp_acf <- acf(Yt_MA2)
samp_acf
samp_acf <- acf(Yt_MA2, lag.max = 20)
samp_acf
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
theo_acf_ma2
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
plot(theo_acf_ma2)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
plot(theo_acf_ma2)
lines(samp_acf)
samp_acf <- acf(Yt_MA2, lag.max = 20)
samp_acf
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
plot(theo_acf_ma2)
points(samp_acf)
samp_acf <- acf(Yt_MA2, lag.max = 20)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
#plot(theo_acf_ma2)
samp_acf
points(theo_acf_ma2)
samp_acf <- acf(Yt_MA2, lag.max = 20)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
#plot(theo_acf_ma2)
samp_acf
points(theo_acf_ma2)
samp_acf <- acf(Yt_MA2, lag.max = 20)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
#plot(theo_acf_ma2)
samp_acf
lines(theo_acf_ma2)
samp_acf <- acf(Yt_MA2, lag.max = 20)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
#plot(theo_acf_ma2)
samp_acf
points(theo_acf_ma2)
samp_acf <- acf(Yt_MA2, lag.max = 20)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
#plot(theo_acf_ma2)
theo_acf_ma2
points(samp_acf)
samp_acf <- acf(Yt_MA2, lag.max = 20)
theo_acf_ma2 = ARMAacf(ma=c(0.45, 0.55), lag.max=20)
#plot(theo_acf_ma2)
samp_acf
points(theo_acf_ma2)
acf_theoretical <- numeric(21)
acf_theoretical[1] <- 1
acf_theoretical[2] <- (theta1 + theta1 * theta2) / (1 + theta1^2 + theta2^2)
acf_theoretical <- numeric(21)
acf_theoretical[1] <- 1
acf_theoretical[2] <- (0.45 + 0.45 * 0.55) / (1 + 0.45^2 + 0.55^2)
acf_theoretical[3] <- 0.55 / (1 + 0.45^2 + 0.55^2)
# The rest of the ACF is 0
acf_theoretical[4:21] <- 0
plot(acf_theoretical)
samp_acf
points(acf_theoretical)
samp_acf
plot(acf_theoretical)
plot(samp_acf)
points(acf_theoretical)
plot(samp_acf)
points(theo_acf_ma2)
plot(samp_acf)
points(acf_theoretical)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE)
read_csv('abalone.csv')
read_csv('.../data/abalone.csv')
cd /Users/tessivinjack/Documents/PSTAT 131/homework-2/homework-2.Rmd
cd /Users/tessivinjack/Documents/PSTAT 131/homework-2
pwd
pwd()
read_csv('...\data\abalone.csv')
read_csv('...data\abalone.csv')
read_csv('\data\abalone.csv')
read.csv('../data/abalone.csv')
read.csv('../data/abalone.csv')
read.csv('abalone.csv')
read_csv('abalone.csv')
read_csv('/Users/tessivinjack/Documents/abalone.csv')
read_csv('/Users/tessivinjack/Documents/PSTAT 131/homework-2/data/abalone.csv')
abalone <- read_csv('/Users/tessivinjack/Documents/PSTAT 131/homework-2/data/abalone.csv')
abalone
library(tidyverse)
library(tidymodels)
abalone <- read_csv('/Users/tessivinjack/Documents/PSTAT 131/homework-2/data/abalone.csv')
abalone
abalone %>% mutate(age = rings + 1.5)
abalone %>% mutate(age = rings + 1.5)
hist(abalone$age)
abalone$age
abalone %>% mutate(age = rings + 1.5)
abalone$age
abalone <- abalone %>% mutate(age = rings + 1.5)
abalone$age
abalone <- abalone %>% mutate(age = rings + 1.5)
hist(abalone$age)
?initial_split
set.seed(114424)
abalone_split <- initial_split(abalone, prop = 0.80,
strata = age)
abalone_train <- training(abalone_split)
abalone_test <- testing(abalone_split)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(abalone_recipe) %>%
step_scale(abalone_recipe)
simple_diamonds_recipe <-
recipe(price ~ ., data = diamonds_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(abalone_recipe) %>%
step_scale(abalone_recipe)
summary(abalone_recipe)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(abalone_recipe()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(abalone_recipe()) %>%
step_scale(abalone_recipe())
summary(abalone_recipe)
abalone_recipe1 <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(abalone_recipe()) %>%
step_scale(abalone_recipe())
abalone_recipe2 <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
abalone_recipe1 == abalone_recipe2
> abalone_recipe1 == abalone_recipe2
if abalone_recipe1 == abalone_recipe2:
identical(abalone_recipe1, abalone_recipe2)
setequal(abalone_recipe1, abalone_recipe2)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
lin_reg <- linear_reg() %>% set_engine("lm")
knn <- nearest_neighbor(neighbors = 7) %>%
set_engine("kknn") %>%
knn <- nearest_neighbor(neighbors = 7) %>%
set_engine("kknn")
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
rm(ls = list())
rm(list = ls())
library(tidyverse)
library(tidymodels)
abalone <- read_csv('/Users/tessivinjack/Documents/PSTAT 131/homework-2/data/abalone.csv')
abalone
abalone <- abalone %>% mutate(age = rings + 1.5)
hist(abalone$age)
set.seed(114424)
abalone_split <- initial_split(abalone, prop = 0.80,
strata = age)
abalone_train <- training(abalone_split)
abalone_test <- testing(abalone_split)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
lin_reg <- linear_reg() %>%
set_engine("lm")
knn <- nearest_neighbor(neighbors = 7) %>%
set_engine("kknn")
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
# step_interact(terms = ~ type:shucked_weight) %>%
# step_interact(terms = ~ longest_shell:diameter) %>%
# step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
lin_reg <- linear_reg() %>%
set_engine("lm")
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(~ type:shucked_weight) %>%
step_interact(~ longest_shell:diameter) %>%
step_interact(~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(~ type:shucked_weight +
~ longest_shell:diameter +
~ shucked_weight:shell_weight) %>%
#
# step_interact(~ starts_with("race_"):starts_with("hisp_") +
#                 starts_with("race_"):starts_with("cat")) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn <- nearest_neighbor(neighbors = 7) %>%
set_engine("kknn")
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn <- nearest_neighbor(neighbors = 7) %>%
set_engine("kknn") %>%
set_mode("regression")
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn_fit <- fit(knn_wflow, abalone_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
abalone
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type_M:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn_fit <- fit(knn_wflow, abalone_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
update_role(rings, new_role = "ID") %>%
step_interact(terms = ~ type_M:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn_fit <- fit(knn_wflow, abalone_train)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
update_role(rings, new_role = "unused") %>%
step_interact(terms = ~ type_M:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_pred <- predict(linreg_fit, new_data = data.frame(
type = F,
longest_shell = 0.50,
diameter = 0.10,
height = 0.30,
whole_weight = 4,
shucked_weight = 1,
viscera_weight = 2,
shell_weight = 1
))
linreg_pred <- predict(linreg_fit, new_data = data.frame(
type = 'F',
longest_shell = 0.50,
diameter = 0.10,
height = 0.30,
whole_weight = 4,
shucked_weight = 1,
viscera_weight = 2,
shell_weight = 1
))
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn_fit <- fit(knn_wflow, abalone_train)
linreg_pred <- predict(linreg_fit, new_data = data.frame(
type = 'F',
longest_shell = 0.50,
diameter = 0.10,
height = 0.30,
whole_weight = 4,
shucked_weight = 1,
viscera_weight = 2,
shell_weight = 1
))
abalone_train <- abalone_train.filter(-rings)
abalone_train <- abalone_train %>% filter(-rings)
abalone_train <- abalone_train %>% select(-rings)
abalone_train <- abalone_train %>% select(-rings)
set.seed(114424)
abalone_split <- initial_split(abalone, prop = 0.80,
strata = age)
abalone_train <- training(abalone_split)
abalone_test <- testing(abalone_split)
abalone_train <- abalone_train %>% select(-rings)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
update_role(rings, new_role = "unused") %>%
step_interact(terms = ~ type_M:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
set.seed(114424)
abalone_split <- initial_split(abalone, prop = 0.80,
strata = age)
abalone_train <- training(abalone_split)
abalone_test <- testing(abalone_split)
abalone_train <- abalone_train %>% select(-rings)
abalone_recipe <- recipe(age ~ ., data = abalone_train) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ type_M:shucked_weight) %>%
step_interact(terms = ~ longest_shell:diameter) %>%
step_interact(terms = ~ shucked_weight:shell_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
linreg_wflow <- workflow() %>%
add_model(lin_reg) %>%
add_recipe(abalone_recipe)
linreg_fit <- fit(linreg_wflow, abalone_train)
knn_wflow <- workflow() %>%
add_model(knn) %>%
add_recipe(abalone_recipe)
knn_fit <- fit(knn_wflow, abalone_train)
linreg_pred <- predict(linreg_fit, new_data = data.frame(
type = 'F',
longest_shell = 0.50,
diameter = 0.10,
height = 0.30,
whole_weight = 4,
shucked_weight = 1,
viscera_weight = 2,
shell_weight = 1
))
lingreg_pred
linreg_pred
library(yardstick)
library(yardstick)
metrics <- metric_set(rsq, rmse, mae)
linreg_predictions <- augment(linreg_fit, newdata = abalone_test)
linreg_predictions <- augment(linreg_fit, new_data = abalone_test)
linreg_predictions
linreg_fit
linreg_metrics <- metrics_set(linreg_predictions, truth = age, estimate = .fitted)
linreg_metrics <- metrics(linreg_predictions, truth = age, estimate = .fitted)
linreg_metrics <- metrics(linreg_predictions, truth = age, estimate = fitted)
linreg_predictions
linreg_metrics <- metrics(linreg_predictions, truth = age, estimate = .pred)
linreg_metrics
knn_predictions <- augment(knn_fit, newdata = abalone_test)
knn_predictions <- augment(knn_fit, new_data = abalone_test)
knn_metrics <- metrics(knn_predictions, truth = age, estimate = .pred)
knn_metrics
library(yardstick)
metrics <- metric_set(rsq, rmse, mae)
linreg_predictions <- augment(linreg_fit, new_data = abalone_test)
linreg_metrics <- metrics(linreg_predictions, truth = age, estimate = .pred)
linreg_metrics
knn_predictions <- augment(knn_fit, new_data = abalone_test)
knn_metrics <- metrics(knn_predictions, truth = age, estimate = .pred)
knn_metrics
biomarker <- read_csv(url) %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
library(tidyverse)
library(tidymodels)
library(modelr)
library(rsample)
library(yardstick)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab4-logistic/data/biomarker_clean.csv'
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker <- read_csv(url) %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
set.seed(102022)
# partition data
partitions <- biomarker %>%
initial_split(prop = 0.8)
# examine
partitions
# training set
training(partitions) %>% head(4)
# testing set
testing(partitions) %>% head(4)
# fit glm
fit <- glm(class ~ .,
data = biomarker,
family = binomial(link = "logit"))
tidy(fit)
# compute predictions on the test set
testing(partitions) %>%
add_predictions(fit)
testing(partitions) %>%
add_predictions(fit)
# tabulate
testing(partitions) %>%
add_predictions(fit, type = 'response') %>%
mutate(pred.class = (pred > 0.5)) %>%
select(class, pred.class) %>%
table()
# store predictions as factors
pred_df <- testing(partitions) %>%
add_predictions(fit, type = 'response') %>%
mutate(pred.class = (pred > 0.5),
group = factor(class, labels = c('TD', 'ASD')),
pred.group = factor(pred.class, labels = c('TD', 'ASD')))
# check order of factor levels
pred_df %>% pull(group) %>% levels()
# compute specificity
pred_df %>%
specificity(truth = group,
estimate = pred.group,
event_level = 'second')
# sensitivity
pred_df %>%
sensitivity(truth = group,
estimate = pred.group,
event_level = 'second')
# define panel (arguments must be yardstick metric function names)
panel_fn <- metric_set(sensitivity, specificity)
# compute
pred_df %>%
panel_fn(truth = group,
estimate = pred.group,
event_level = 'second')
pred_df %>% conf_mat(truth = group, estimate = pred.group)
reticulate::repl_python()
reticulate::repl_python()
