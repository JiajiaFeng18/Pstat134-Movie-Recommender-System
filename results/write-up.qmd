---
title: "Movie Recommender System Project"
authors: "Jiajia Feng, Tess Ivinjack, Leslie Cervantes Rivera, Valerie De La Fuente"
date: 03-19-15
editor: visual
format: html
code-copy: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---

## Introduction

### Objective

This project aims to build a movie recommendation system using data retrieved from The Movie Database (TMDb) API and Python-based machine learning techniques.

### Motivation

As the world becomes increasingly digitized, effective recommendation systems are crucial for enhancing user experience by providing personalized content suggestions.

### Data Description

### Methodology

Briefly mention the key methods, tools, and datasets used.

## Data Collection and Preparation

### API Data Retrieval

Describe the API used (e.g., TMDb), endpoints queried, and relevant data fields collected (e.g., genres, ratings, cast).

### Data Cleaning

Explain key preprocessing steps like handling missing values, formatting genre data, and transforming ratings.

### Feature Engineering

Describe features created for both content-based (e.g., TF-IDF for movie descriptions) and collaborative filtering (e.g., user-item matrices).

## Modeling Approach

### Content-Based Filtering

-   Describe the method (e.g., cosine similarity using TF-IDF vectors or count vectors).

-   Outline the steps to calculate similarity scores.

-   Highlight key implementation details (e.g., efficient storage of vectors).

### Collaborative Filtering

-   Explain the technique (e.g., matrix factorization with Surprise library or k-nearest neighbors).

-   Describe how user-item interactions are utilized.

### Evaluation

-   Describe performance metrics used (e.g., precision, recall, RMSE).

-   Provide results with brief interpretation.

## Results and Analysis

-   Highlight key findings from both models.

-   Compare the strengths and weaknesses of content-based and collaborative filtering approaches.

-   Discuss any challenges faced (e.g., cold start problem) and how you addressed them.

## Conclusion

-   Summarize the project's achievements.

-   Suggest potential improvements (e.g., hybrid models, enhanced data sources, or improved user interface).

-   Mention real-world applications or extensions of the system.
